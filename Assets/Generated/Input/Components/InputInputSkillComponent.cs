//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputContext {

    public InputEntity inputSkillEntity { get { return GetGroup(InputMatcher.InputSkill).GetSingleEntity(); } }
    public Game.Component.InputSkillComponent inputSkill { get { return inputSkillEntity.inputSkill; } }
    public bool hasInputSkill { get { return inputSkillEntity != null; } }

    public InputEntity SetInputSkill(bool newIsValid, int newSkillCode) {
        if (hasInputSkill) {
            throw new Entitas.EntitasException("Could not set InputSkill!\n" + this + " already has an entity with Game.Component.InputSkillComponent!",
                "You should check if the context already has a inputSkillEntity before setting it or use context.ReplaceInputSkill().");
        }
        var entity = CreateEntity();
        entity.AddInputSkill(newIsValid, newSkillCode);
        return entity;
    }

    public void ReplaceInputSkill(bool newIsValid, int newSkillCode) {
        var entity = inputSkillEntity;
        if (entity == null) {
            entity = SetInputSkill(newIsValid, newSkillCode);
        } else {
            entity.ReplaceInputSkill(newIsValid, newSkillCode);
        }
    }

    public void RemoveInputSkill() {
        inputSkillEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public Game.Component.InputSkillComponent inputSkill { get { return (Game.Component.InputSkillComponent)GetComponent(InputComponentsLookup.InputSkill); } }
    public bool hasInputSkill { get { return HasComponent(InputComponentsLookup.InputSkill); } }

    public void AddInputSkill(bool newIsValid, int newSkillCode) {
        var index = InputComponentsLookup.InputSkill;
        var component = (Game.Component.InputSkillComponent)CreateComponent(index, typeof(Game.Component.InputSkillComponent));
        component.isValid = newIsValid;
        component.skillCode = newSkillCode;
        AddComponent(index, component);
    }

    public void ReplaceInputSkill(bool newIsValid, int newSkillCode) {
        var index = InputComponentsLookup.InputSkill;
        var component = (Game.Component.InputSkillComponent)CreateComponent(index, typeof(Game.Component.InputSkillComponent));
        component.isValid = newIsValid;
        component.skillCode = newSkillCode;
        ReplaceComponent(index, component);
    }

    public void RemoveInputSkill() {
        RemoveComponent(InputComponentsLookup.InputSkill);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherInputSkill;

    public static Entitas.IMatcher<InputEntity> InputSkill {
        get {
            if (_matcherInputSkill == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.InputSkill);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherInputSkill = matcher;
            }

            return _matcherInputSkill;
        }
    }
}
