//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputContext {

    public InputEntity gameComponentInputButtonEntity { get { return GetGroup(InputMatcher.GameComponentInputButton).GetSingleEntity(); } }
    public Game.Component.InputButtonComponent gameComponentInputButton { get { return gameComponentInputButtonEntity.gameComponentInputButton; } }
    public bool hasGameComponentInputButton { get { return gameComponentInputButtonEntity != null; } }

    public InputEntity SetGameComponentInputButton(Game.Enums.InputButtn newInputButton) {
        if (hasGameComponentInputButton) {
            throw new Entitas.EntitasException("Could not set GameComponentInputButton!\n" + this + " already has an entity with Game.Component.InputButtonComponent!",
                "You should check if the context already has a gameComponentInputButtonEntity before setting it or use context.ReplaceGameComponentInputButton().");
        }
        var entity = CreateEntity();
        entity.AddGameComponentInputButton(newInputButton);
        return entity;
    }

    public void ReplaceGameComponentInputButton(Game.Enums.InputButtn newInputButton) {
        var entity = gameComponentInputButtonEntity;
        if (entity == null) {
            entity = SetGameComponentInputButton(newInputButton);
        } else {
            entity.ReplaceGameComponentInputButton(newInputButton);
        }
    }

    public void RemoveGameComponentInputButton() {
        gameComponentInputButtonEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public Game.Component.InputButtonComponent gameComponentInputButton { get { return (Game.Component.InputButtonComponent)GetComponent(InputComponentsLookup.GameComponentInputButton); } }
    public bool hasGameComponentInputButton { get { return HasComponent(InputComponentsLookup.GameComponentInputButton); } }

    public void AddGameComponentInputButton(Game.Enums.InputButtn newInputButton) {
        var index = InputComponentsLookup.GameComponentInputButton;
        var component = (Game.Component.InputButtonComponent)CreateComponent(index, typeof(Game.Component.InputButtonComponent));
        component.inputButton = newInputButton;
        AddComponent(index, component);
    }

    public void ReplaceGameComponentInputButton(Game.Enums.InputButtn newInputButton) {
        var index = InputComponentsLookup.GameComponentInputButton;
        var component = (Game.Component.InputButtonComponent)CreateComponent(index, typeof(Game.Component.InputButtonComponent));
        component.inputButton = newInputButton;
        ReplaceComponent(index, component);
    }

    public void RemoveGameComponentInputButton() {
        RemoveComponent(InputComponentsLookup.GameComponentInputButton);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherGameComponentInputButton;

    public static Entitas.IMatcher<InputEntity> GameComponentInputButton {
        get {
            if (_matcherGameComponentInputButton == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.GameComponentInputButton);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherGameComponentInputButton = matcher;
            }

            return _matcherGameComponentInputButton;
        }
    }
}
