//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity gameComponentInputServiceEntity { get { return GetGroup(GameMatcher.GameComponentInputService).GetSingleEntity(); } }
    public Game.Component.InputServiceComponent gameComponentInputService { get { return gameComponentInputServiceEntity.gameComponentInputService; } }
    public bool hasGameComponentInputService { get { return gameComponentInputServiceEntity != null; } }

    public GameEntity SetGameComponentInputService(Game.Service.IInputService newInputService) {
        if (hasGameComponentInputService) {
            throw new Entitas.EntitasException("Could not set GameComponentInputService!\n" + this + " already has an entity with Game.Component.InputServiceComponent!",
                "You should check if the context already has a gameComponentInputServiceEntity before setting it or use context.ReplaceGameComponentInputService().");
        }
        var entity = CreateEntity();
        entity.AddGameComponentInputService(newInputService);
        return entity;
    }

    public void ReplaceGameComponentInputService(Game.Service.IInputService newInputService) {
        var entity = gameComponentInputServiceEntity;
        if (entity == null) {
            entity = SetGameComponentInputService(newInputService);
        } else {
            entity.ReplaceGameComponentInputService(newInputService);
        }
    }

    public void RemoveGameComponentInputService() {
        gameComponentInputServiceEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Game.Component.InputServiceComponent gameComponentInputService { get { return (Game.Component.InputServiceComponent)GetComponent(GameComponentsLookup.GameComponentInputService); } }
    public bool hasGameComponentInputService { get { return HasComponent(GameComponentsLookup.GameComponentInputService); } }

    public void AddGameComponentInputService(Game.Service.IInputService newInputService) {
        var index = GameComponentsLookup.GameComponentInputService;
        var component = (Game.Component.InputServiceComponent)CreateComponent(index, typeof(Game.Component.InputServiceComponent));
        component.inputService = newInputService;
        AddComponent(index, component);
    }

    public void ReplaceGameComponentInputService(Game.Service.IInputService newInputService) {
        var index = GameComponentsLookup.GameComponentInputService;
        var component = (Game.Component.InputServiceComponent)CreateComponent(index, typeof(Game.Component.InputServiceComponent));
        component.inputService = newInputService;
        ReplaceComponent(index, component);
    }

    public void RemoveGameComponentInputService() {
        RemoveComponent(GameComponentsLookup.GameComponentInputService);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGameComponentInputService;

    public static Entitas.IMatcher<GameEntity> GameComponentInputService {
        get {
            if (_matcherGameComponentInputService == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GameComponentInputService);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGameComponentInputService = matcher;
            }

            return _matcherGameComponentInputService;
        }
    }
}
